---
swagger: '2.0'
info:
  title: music API
  version: v1
consumes:
- application/json
produces:
- application/json
paths:
  "/albums":
    get:
      summary: list albums
      tags:
      - Album
      parameters:
      - name: page
        in: query
        type: string
        description: page
        example: 1
        required: false
      description: album 리스트를 가져옵니다.
      responses:
        '200':
          description: successful
    post:
      summary: create album
      tags:
      - Album
      parameters:
      - name: album
        in: body
        schema:
          "$ref": "#/components/schemas/album_object"
      description: 앨범을 생성합니다. artist_id와 title은 필수입니다.
      responses:
        '200':
          description: album created
  "/albums/{id}":
    parameters:
    - name: id
      in: path
      type: string
      description: id
      required: true
    get:
      summary: show album
      tags:
      - Album
      description: 개별 album을 조회합니다. artist와 track list를 포함합니다.
      responses:
        '200':
          description: successful
    put:
      summary: update album
      tags:
      - Album
      parameters:
      - name: album
        in: body
        schema:
          "$ref": "#/components/schemas/album_object"
      responses:
        '200':
          description: successful
    delete:
      summary: delete album
      tags:
      - Album
      responses:
        '204':
          description: successful
  "/artists":
    get:
      summary: list artists
      tags:
      - Artist
      parameters:
      - name: page
        in: query
        type: string
        description: page
        example: 1
        required: false
      description: artist 리스트를 가져옵니다.
      responses:
        '200':
          description: successful
    post:
      summary: create artist
      tags:
      - Artist
      parameters:
      - name: artist
        in: body
        schema:
          "$ref": "#/components/schemas/artist_object"
      description: artist를 생성합니다. name은 필수입니다.
      responses:
        '201':
          description: artist created
  "/artists/{id}":
    parameters:
    - name: id
      in: path
      type: string
      description: id
      required: true
    get:
      summary: show artist
      tags:
      - Artist
      description: 개별 artist을 조회합니다.
      responses:
        '200':
          description: successful
    put:
      summary: update artist
      tags:
      - Artist
      parameters:
      - name: artist
        in: body
        schema:
          "$ref": "#/components/schemas/artist_object"
      responses:
        '200':
          description: successful
    delete:
      summary: delete artist
      tags:
      - Artist
      responses:
        '204':
          description: successful
  "/groups":
    get:
      summary: list groups
      tags:
      - group
      parameters:
      - name: page
        in: query
        type: string
        description: page
        example: 1
        required: false
      description: group 리스트를 가져옵니다. 본인이 속한 group외의 group도 볼 수 있습니다.
      responses:
        '200':
          description: successful
    post:
      summary: create group
      tags:
      - group
      parameters:
      - name: Authorization
        in: header
        type: integer
        description: 사용자 인증(user_id 입력)
        required: true
      - name: group
        in: body
        schema:
          "$ref": "#/components/schemas/group_object"
      description: group를 생성합니다. name은 필수입니다. <br> 그룹 생성 시 그룹의 playlist(default type)가
        생성됩니다.
      responses:
        '200':
          description: group created
        '422':
          description: failed
  "/groups/{id}":
    parameters:
    - name: id
      in: path
      type: string
      description: id
      required: true
    get:
      summary: show group
      tags:
      - group
      description: 개별 group을 조회합니다. 본인이 속한 group외의 group도 볼 수 있습니다.
      responses:
        '200':
          description: successful
    put:
      summary: update group
      tags:
      - group
      description: group을 수정합니다. group의 owner만 수정할 수 있습니다.
      parameters:
      - name: Authorization
        in: header
        type: integer
        description: 사용자 인증(user_id 입력)
        required: true
      - name: group
        in: body
        schema:
          "$ref": "#/components/schemas/group_object"
      responses:
        '200':
          description: successful
    delete:
      summary: delete group
      tags:
      - group
      parameters:
      - name: Authorization
        in: header
        type: integer
        description: 사용자 인증(user_id 입력)
        required: true
      description: group을 삭제합니다. group의 owner만 삭제할 수 있습니다.
      responses:
        '204':
          description: successful
  "/playlist_tracks":
    get:
      summary: get playlist_tracks
      tags:
      - playlist_track
      parameters:
      - name: Authorization
        in: header
        type: integer
        description: 사용자 인증(user_id 입력)
        required: true
      - name: playlist_id
        in: query
        type: integer
        description: playlist
        required: true
      - name: page
        in: query
        type: string
        description: page
        example: 1
        required: false
      description: 'playlist_track list를 조회합니다. <br> playlist에 속한 playlist_track만
        조회합니다. <br> default(플레이리스트) 타입 조회시 사용자 인증을 요구합니다. <br> my_album(내 앨범) 타입은
        요구하지 않습니다. '
      responses:
        '200':
          description: get playlist_tracks
    post:
      summary: create playlist_track
      tags:
      - playlist_track
      parameters:
      - name: Authorization
        in: header
        type: integer
        description: 사용자 인증(user_id 입력)
        required: true
      - name: playlist_id
        in: query
        type: integer
        description: 사용자가 playlist에 대한 권한이 있나 확인
        required: true
      - name: playlist_track
        in: body
        schema:
          "$ref": "#/components/schemas/playlist_track_object"
      description: playlist_track를 생성합니다. <br> body의 user_id는 playlist_track을 생성한
        사람입니다. <br> 사용자 검증을 위하여 user_id와 playlist_id를 추가로 받습니다.
      responses:
        '201':
          description: create playlist_track
  "/playlist_tracks/{id}":
    parameters:
    - name: id
      in: path
      type: string
      description: id
      required: true
    delete:
      summary: delete playlist_track
      tags:
      - playlist_track
      parameters:
      - name: Authorization
        in: header
        type: integer
        description: 사용자 인증(user_id 입력)
        required: true
      - name: playlist_id
        in: query
        type: integer
        description: 사용자가 playlist에 대한 권한이 있나 확인
        required: true
      description: playlist_track을 삭제합니다.
      responses:
        '204':
          description: successful
  "/playlists":
    get:
      summary: list playlists
      tags:
      - playlist
      parameters:
      - name: page
        in: query
        type: string
        description: page
        example: 1
        required: false
      description: playlist 리스트를 가져옵니다. my_album(내앨범) 타입의 playlist만 조회합니다. <br> 타인의
        playlist를 조회할 수 있습니다.
      responses:
        '200':
          description: successful
    post:
      summary: create playlist
      tags:
      - playlist
      parameters:
      - name: Authorization
        in: header
        type: integer
        description: 사용자 인증(user_id 입력)
        required: true
      - name: playlist
        in: body
        schema:
          "$ref": "#/components/schemas/playlist_object"
      - name: owner_id
        in: query
        type: integer
        description: user_id or group_id
        required: true
      - name: owner_type
        in: query
        type: string
        description: user or group
        required: true
      responses:
        '200':
          description: create playlist
  "/playlists/my_playlist":
    get:
      summary: get my_playlists
      tags:
      - playlist
      parameters:
      - name: Authorization
        in: header
        type: integer
        description: 사용자 인증(user_id 입력)
        required: true
      - name: page
        in: query
        type: string
        description: page
        example: 1
        required: false
      - name: owner_id
        in: query
        type: integer
        description: user_id or group_id
        required: true
      - name: owner_type
        in: query
        type: string
        description: user or group
        required: true
      description: 나 혹은 내가 속한 그룹의 playlist를 조회합니다.
      responses:
        '200':
          description: successful
  "/playlists/{id}":
    parameters:
    - name: id
      in: path
      type: string
      description: id
      required: true
    get:
      summary: show playlist
      tags:
      - playlist
      parameters:
      - name: Authorization
        in: header
        type: integer
        description: 사용자 인증(user_id 입력)
        required: true
      description: 개별 playlist 리스트를 가져옵니다. <br> default(플레이리스트) 타입 조회시 사용자 인증을 요구합니다.
        <br> my_album(내 앨범) 타입은 요구하지 않습니다.
      responses:
        '200':
          description: successful
    put:
      summary: update playlist
      tags:
      - playlist
      description: playlist를 수정합니다. title은 필수입니다. <br> owner(polymorphic. group or
        user)의 playlist를 수정합니다. <br> my_album 타입의 playlist만 수정할 수 있습니다.
      parameters:
      - name: Authorization
        in: header
        type: integer
        description: 사용자 인증(user_id 입력)
        required: true
      - name: owner_id
        in: query
        type: integer
        description: user_id or group_id
        required: true
      - name: owner_type
        in: query
        type: string
        description: user or group
        required: true
      - name: playlist
        in: body
        schema:
          "$ref": "#/components/schemas/playlist_object"
      responses:
        '200':
          description: successful
    delete:
      summary: delete playlist
      tags:
      - playlist
      parameters:
      - name: owner_id
        in: query
        type: integer
        description: user_id or group_id
        required: true
      - name: owner_type
        in: query
        type: string
        description: user or group
        required: true
      - name: Authorization
        in: header
        type: integer
        description: 사용자 인증(user_id 입력)
        required: true
      description: playlist을 삭제합니다.
      responses:
        '204':
          description: successful
  "/tracks":
    get:
      summary: list tracks
      tags:
      - track
      parameters:
      - name: q
        in: query
        type: string
        description: search by title or artist_name or album_name
        example: 아이유
        required: false
      - name: artist_id
        in: query
        type: string
        description: search by artist_id
        example: 1
        required: false
      - name: album_id
        in: query
        type: string
        description: search by album_id
        example: 1
        required: false
      - name: sort
        in: query
        type: string
        description: sort by created_at or likes_count
        example: likes_count
        required: false
      - name: page
        in: query
        type: string
        description: page
        example: 1
        required: false
      description: track 리스트를 가져옵니다. <br> q(title, artist_name, album_name), artist_id,
        album_id, sort, page를 params로 받아 필터링합니다.
      responses:
        '200':
          description: successful
    post:
      summary: create track
      tags:
      - track
      parameters:
      - name: track
        in: body
        schema:
          "$ref": "#/components/schemas/track_object"
      description: track를 생성합니다.
      responses:
        '201':
          description: track created
  "/tracks/{id}":
    parameters:
    - name: id
      in: path
      type: string
      description: id
      required: true
    get:
      summary: show track
      tags:
      - track
      description: 개별 track을 조회합니다.
      responses:
        '200':
          description: successful
    put:
      summary: update track
      tags:
      - track
      parameters:
      - name: track
        in: body
        schema:
          "$ref": "#/components/schemas/track_object"
      responses:
        '200':
          description: successful
    delete:
      summary: delete track
      tags:
      - track
      responses:
        '204':
          description: successful
  "/user_groups":
    post:
      summary: create user_group
      tags:
      - user_group
      parameters:
      - name: Authorization
        in: header
        type: integer
        description: 사용자 인증(user_id 입력)
        required: true
      - name: user_id
        in: query
        type: integer
        description: 그룹에 추가할 사용자
        required: true
      - name: group_id
        in: query
        type: integer
        description: 사용자를 추가할 그룹
        required: true
      description: user_group를 생성합니다. <br> group의 owner만 user_group을 생성할 수 있습니다. <br>
        사용자 검증을 위하여 owner_id를 추가로 받습니다.
      responses:
        '201':
          description: create user_group
  "/user_groups/{id}":
    parameters:
    - name: id
      in: path
      type: string
      description: id
      required: true
    delete:
      summary: delete user_group
      tags:
      - user_group
      parameters:
      - name: Authorization
        in: header
        type: integer
        description: 사용자 인증(user_id 입력)
        required: true
      description: user_group을 삭제합니다. <br> group의 owner만 user_group을 삭제할 수 있습니다. <br>
        사용자 검증을 위하여 owner_id를 추가로 받습니다.
      responses:
        '204':
          description: successful
  "/users":
    get:
      summary: list users
      tags:
      - user
      parameters:
      - name: page
        in: query
        type: string
        description: page
        example: 1
        required: false
      description: user 리스트를 가져옵니다.
      responses:
        '200':
          description: successful
  "/users/{id}":
    parameters:
    - name: id
      in: path
      type: string
      description: id
      required: true
    get:
      summary: show user
      tags:
      - user
      description: 개별 user을 조회합니다. my_album 타입의 playlist를 포함합니다.
      responses:
        '200':
          description: successful
servers:
- url: http://localhost:3000
  variables:
    defaultHost:
      default: http://localhost:3000
components:
  schemas:
    album_object:
      type: object
      properties:
        album:
          type: object
          properties:
            title:
              type: string
              example: growing up
            artist_id:
              type: integer
              example: 1
      required:
      - title
      - artist_id
    artist_object:
      type: object
      properties:
        artist:
          type: object
          properties:
            name:
              type: string
              example: 아이유
      required:
      - name
    group_object:
      type: object
      properties:
        group:
          type: object
          properties:
            name:
              type: string
              example: 그룹1
      required:
      - name
    playlist_object:
      type: object
      properties:
        playlist:
          type: object
          properties:
            title:
              type: string
              example: 내 앨범1
      required:
      - title
    playlist_track_object:
      type: object
      properties:
        playlist_track:
          type: object
          properties:
            playlist_id:
              type: integer
              example: 1
            track_id:
              type: integer
              example: 1
            user_id:
              type: integer
              example: 1
      required:
      - title
    track_object:
      type: object
      properties:
        track:
          type: object
          properties:
            title:
              type: string
              example: 안녕(Hello)
            artist_id:
              type: integer
              example: 1
            album_id:
              type: integer
              example: 1
      required:
      - title
